{
  "openapi": "3.0.0",
  "info": {
    "title": "Payoova Wallet API",
    "description": "Professional cryptocurrency wallet API with multi-network support",
    "version": "2.0.0",
    "contact": {
      "name": "Payoova Support",
      "email": "support@payoova.com",
      "url": "https://payoova.com/support"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "servers": [
    {
      "url": "https://qjh9iec79z56.manus.space/api",
      "description": "Production server"
    },
    {
      "url": "http://localhost:5000/api",
      "description": "Development server"
    }
  ],
  "paths": {
    "/health": {
      "get": {
        "summary": "Health check endpoint",
        "tags": ["System"],
        "responses": {
          "200": {
            "description": "System is healthy",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthResponse"
                }
              }
            }
          },
          "503": {
            "description": "System is unhealthy",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "summary": "User login",
        "tags": ["Authentication"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/signup": {
      "post": {
        "summary": "User registration",
        "tags": ["Authentication"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignupRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Registration successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/verify": {
      "get": {
        "summary": "Verify authentication token",
        "tags": ["Authentication"],
        "security": [{"BearerAuth": []}],
        "responses": {
          "200": {
            "description": "Token is valid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "401": {
            "description": "Invalid or expired token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/wallet/create/{network}": {
      "post": {
        "summary": "Create a new wallet for specified network",
        "tags": ["Wallet"],
        "security": [{"BearerAuth": []}],
        "parameters": [
          {
            "name": "network",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["ethereum", "polygon", "bsc", "arbitrum", "optimism", "avalanche"]
            },
            "description": "Blockchain network"
          }
        ],
        "responses": {
          "201": {
            "description": "Wallet created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WalletCreateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Wallet already exists or validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/wallet/balance/{network}": {
      "get": {
        "summary": "Get wallet balance for specific network",
        "tags": ["Wallet"],
        "security": [{"BearerAuth": []}],
        "parameters": [
          {
            "name": "network",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["ethereum", "polygon", "bsc", "arbitrum", "optimism", "avalanche"]
            },
            "description": "Blockchain network"
          }
        ],
        "responses": {
          "200": {
            "description": "Balance retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BalanceResponse"
                }
              }
            }
          },
          "404": {
            "description": "Wallet not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/wallet/transfer": {
      "post": {
        "summary": "Transfer cryptocurrency between addresses",
        "tags": ["Wallet"],
        "security": [{"BearerAuth": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransferRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Transfer successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransferResponse"
                }
              }
            }
          },
          "400": {
            "description": "Insufficient balance or validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/wallet/history/{network}": {
      "get": {
        "summary": "Get transaction history for network",
        "tags": ["Wallet"],
        "security": [{"BearerAuth": []}],
        "parameters": [
          {
            "name": "network",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["ethereum", "polygon", "bsc", "arbitrum", "optimism", "avalanche"]
            },
            "description": "Blockchain network"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 50,
              "minimum": 1,
              "maximum": 100
            },
            "description": "Number of transactions to return"
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 0,
              "minimum": 0
            },
            "description": "Number of transactions to skip"
          }
        ],
        "responses": {
          "200": {
            "description": "Transaction history retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionHistoryResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/qr/address/{network}": {
      "get": {
        "summary": "Generate QR code for wallet address",
        "tags": ["QR Code"],
        "security": [{"BearerAuth": []}],
        "parameters": [
          {
            "name": "network",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["ethereum", "polygon", "bsc", "arbitrum", "optimism", "avalanche"]
            },
            "description": "Blockchain network"
          }
        ],
        "responses": {
          "200": {
            "description": "QR code generated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QRCodeResponse"
                }
              }
            }
          },
          "404": {
            "description": "Wallet not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/admin/dashboard": {
      "get": {
        "summary": "Get admin dashboard statistics",
        "tags": ["Admin"],
        "security": [{"BearerAuth": []}],
        "responses": {
          "200": {
            "description": "Dashboard data retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminDashboardResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/admin/users": {
      "get": {
        "summary": "Get all users with pagination",
        "tags": ["Admin"],
        "security": [{"BearerAuth": []}],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1
            },
            "description": "Page number"
          },
          {
            "name": "per_page",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 20,
              "minimum": 1,
              "maximum": 100
            },
            "description": "Items per page"
          }
        ],
        "responses": {
          "200": {
            "description": "Users retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminUsersResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/kyc/status": {
      "get": {
        "summary": "Get user KYC status",
        "tags": ["KYC"],
        "security": [{"BearerAuth": []}],
        "responses": {
          "200": {
            "description": "KYC status retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KYCStatusResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/kyc/verify": {
      "post": {
        "summary": "Submit KYC verification",
        "tags": ["KYC"],
        "security": [{"BearerAuth": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/KYCVerificationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "KYC verification submitted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KYCVerificationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "HealthResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["healthy", "unhealthy"]
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "version": {
            "type": "string"
          },
          "services": {
            "type": "object",
            "properties": {
              "database": {
                "type": "string",
                "enum": ["healthy", "unhealthy"]
              },
              "api": {
                "type": "string",
                "enum": ["healthy", "unhealthy"]
              }
            }
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "default": false
          },
          "error": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string",
            "minLength": 6
          }
        }
      },
      "SignupRequest": {
        "type": "object",
        "required": ["name", "email", "password"],
        "properties": {
          "name": {
            "type": "string",
            "minLength": 2,
            "maxLength": 100
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string",
            "minLength": 6
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "token": {
            "type": "string"
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "role": {
            "type": "string",
            "enum": ["user", "admin"]
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "is_active": {
            "type": "boolean"
          }
        }
      },
      "WalletCreateResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true
          },
          "wallet": {
            "$ref": "#/components/schemas/Wallet"
          }
        }
      },
      "Wallet": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "address": {
            "type": "string"
          },
          "network": {
            "type": "string"
          },
          "balance": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "BalanceResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true
          },
          "balance": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "network": {
            "type": "string"
          }
        }
      },
      "TransferRequest": {
        "type": "object",
        "required": ["from_address", "to_address", "amount", "network"],
        "properties": {
          "from_address": {
            "type": "string",
            "pattern": "^0x[a-fA-F0-9]{40}$"
          },
          "to_address": {
            "type": "string",
            "pattern": "^0x[a-fA-F0-9]{40}$"
          },
          "amount": {
            "type": "string"
          },
          "network": {
            "type": "string",
            "enum": ["ethereum", "polygon", "bsc", "arbitrum", "optimism", "avalanche"]
          },
          "currency": {
            "type": "string"
          }
        }
      },
      "TransferResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true
          },
          "transaction": {
            "$ref": "#/components/schemas/Transaction"
          }
        }
      },
      "Transaction": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "transaction_hash": {
            "type": "string"
          },
          "from_address": {
            "type": "string"
          },
          "to_address": {
            "type": "string"
          },
          "amount": {
            "type": "string"
          },
          "currency": {
            "type": "string"
          },
          "network": {
            "type": "string"
          },
          "transaction_type": {
            "type": "string",
            "enum": ["send", "receive"]
          },
          "status": {
            "type": "string",
            "enum": ["pending", "confirmed", "failed"]
          },
          "gas_fee": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "confirmed_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "TransactionHistoryResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true
          },
          "transactions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Transaction"
            }
          },
          "total": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          },
          "per_page": {
            "type": "integer"
          }
        }
      },
      "QRCodeResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true
          },
          "qr_code": {
            "type": "string",
            "description": "Base64 encoded QR code image"
          },
          "address": {
            "type": "string"
          },
          "network": {
            "type": "string"
          },
          "uri": {
            "type": "string"
          }
        }
      },
      "AdminDashboardResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true
          },
          "stats": {
            "type": "object",
            "properties": {
              "total_users": {
                "type": "integer"
              },
              "active_users": {
                "type": "integer"
              },
              "total_transactions": {
                "type": "integer"
              },
              "total_volume": {
                "type": "string"
              },
              "pending_kyc": {
                "type": "integer"
              }
            }
          }
        }
      },
      "AdminUsersResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true
          },
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/User"
            }
          },
          "pagination": {
            "type": "object",
            "properties": {
              "page": {
                "type": "integer"
              },
              "per_page": {
                "type": "integer"
              },
              "total": {
                "type": "integer"
              },
              "pages": {
                "type": "integer"
              }
            }
          }
        }
      },
      "KYCStatusResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true
          },
          "status": {
            "type": "string",
            "enum": ["pending", "approved", "rejected", "not_started"]
          },
          "verification_level": {
            "type": "integer"
          },
          "documents_required": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "KYCVerificationRequest": {
        "type": "object",
        "required": ["first_name", "last_name", "date_of_birth", "country"],
        "properties": {
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "date_of_birth": {
            "type": "string",
            "format": "date"
          },
          "nationality": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "address_line1": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "postal_code": {
            "type": "string"
          }
        }
      },
      "KYCVerificationResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true
          },
          "status": {
            "type": "string"
          },
          "verification_id": {
            "type": "integer"
          }
        }
      }
    },
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "tags": [
    {
      "name": "System",
      "description": "System health and monitoring"
    },
    {
      "name": "Authentication",
      "description": "User authentication and authorization"
    },
    {
      "name": "Wallet",
      "description": "Cryptocurrency wallet operations"
    },
    {
      "name": "QR Code",
      "description": "QR code generation for addresses and payments"
    },
    {
      "name": "Admin",
      "description": "Administrative functions (admin only)"
    },
    {
      "name": "KYC",
      "description": "Know Your Customer verification"
    }
  ]
}
